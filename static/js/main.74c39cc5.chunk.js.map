{"version":3,"sources":["pages/Home/Home.js","components/TabPanel/TabPanel.js","pages/Profile/Profile.js","pages/RecipeDetails/RecipeDetails.js","data/recipes.js","pages/Swiper/Swiper.js","App.js","serviceWorker.js","index.js"],"names":["Home","useState","selectedIngredients","setSelectedIngredients","ingreRef","useRef","className","to","Image","src","roundedCircle","Form","Group","as","Col","Label","InputGroup","Control","type","placeholder","ref","Prepend","onClick","newSelectedIng","current","value","Text","map","ingredient","i","Badge","key","pill","variant","Typography","id","gutterBottom","Slider","min","defaultValue","step","max","valueLabelDisplay","aria-labelledby","controlId","Check","label","TabPanel","props","children","index","other","role","hidden","Box","p","tab","setTab","IconButton","Avatar","align","Paper","square","Tabs","indicatorColor","textColor","onChange","event","newValue","aria-label","centered","Tab","RecipeDetails","recipes","image","title","description","steps","ingredients","name","tag","duration","Swiper","recipesDB","onSwipe","direction","alert","recipe","style","backgroundImage","Tooltip","Fab","color","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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,SACPC,YAAa,gDAGf,CACED,MAAO,SACPC,YACE,sIAGNE,YAAa,CACX,CACEC,KAAM,YACNC,IAAK,UAGP,CACED,KAAM,WACNC,IAAK,UAGP,CACED,KAAM,mBACNC,IAAK,QAGP,CACED,KAAM,qBACNC,IAAK,UAGP,CACED,KAAM,qBACNC,IAAK,SAGP,CACED,KAAM,+BACNC,IAAK,UAGP,CACED,KAAM,iBACNC,IAAK,cAGTC,SAAU,IAGZ,CACE9C,GAAI,EACJuC,MAAO,CACL,yFAEFC,MAAO,UACPC,YACE,+GACFC,MAAO,CACL,CACEF,MAAO,SACPC,YACE,wFAGJ,CACED,MAAO,SACPC,YACE,2IAGJ,CACED,MAAO,SACPC,YACE,oMAGJ,CACED,MAAO,SACPC,YACE,4HAGJ,CACED,MAAO,SACPC,YACE,sdAGNE,YAAa,CACX,CACEC,KAAM,oBACNC,IAAK,QAGP,CACED,KAAM,uBACNC,IAAK,aAGP,CACED,KAAM,UACNC,IAAK,SAGP,CACED,KAAM,mBACNC,IAAK,QAGP,CACED,KAAM,sBACNC,IAAK,UAGP,CACED,KAAM,aACNC,IAAK,UAGP,CACED,KAAM,+BACNC,IAAK,gBAGTC,SAAU,IAGZ,CACE9C,GAAI,EACJuC,MAAO,CACL,yFAEFC,MAAO,oBACPC,YACE,6GACFC,MAAO,CACL,CACEF,MAAO,SACPC,YACE,iLAGJ,CACED,MAAO,SACPC,YACE,4GAGJ,CACED,MAAO,SACPC,YACE,6EAGJ,CACED,MAAO,SACPC,YACE,wFAGJ,CACED,MAAO,SACPC,YACE,+KAGJ,CACED,MAAO,SACPC,YACE,4LAGNE,YAAa,CACX,CACEC,KAAM,mBACNC,IAAK,QAGP,CACED,KAAM,2BACNC,IAAK,eAGP,CACED,KAAM,QACNC,IAAK,OAGP,CACED,KAAM,4BACNC,IAAK,gBAGP,CACED,KAAM,aACNC,IAAK,UAGP,CACED,KAAM,YACNC,IAAK,SAGP,CACED,KAAM,WACNC,IAAK,UAGP,CACED,KAAM,cACNC,IAAK,aAGTC,SAAU,IAGZ,CACE9C,GAAI,EACJuC,MAAO,CACL,oFAEFC,MAAO,eACPC,YACE,gFACFC,MAAO,CACL,CACEF,MAAO,SACPC,YACE,wIAGJ,CACED,MAAO,SACPC,YACE,0HAGJ,CACED,MAAO,SACPC,YACE,6KAGJ,CACED,MAAO,SACPC,YACE,sPAGJ,CACED,MAAO,SACPC,YACE,2IAGNE,YAAa,CACX,CACEC,KAAM,aACNC,IAAK,SAGP,CACED,KAAM,oBACNC,IAAK,WAGP,CACED,KAAM,aACNC,IAAK,SAGP,CACED,KAAM,SACNC,IAAK,OAGP,CACED,KAAM,eACNC,IAAK,UAGP,CACED,KAAM,2BACNC,IAAK,eAGP,CACED,KAAM,gCACNC,IAAK,qBAGTC,SAAU,KCxTCC,G,MAzEA,WACb,IAAMT,EAAUU,EAEVC,EAAU,SAACC,GACf,OAAQA,GACN,IAAK,OACHC,MAAM,4BACN,MACF,IAAK,QACHA,MAAM,2BAOZ,OACE,oCACE,yBAAKhF,UAAU,eAAf,gBACA,yBAAKA,UAAU,uCACb,yBAAKA,UAAU,sBACb,yBAAKA,UAAU,iBACZmE,EAAQ9C,KAAI,SAAC4D,GAAD,OACX,kBAAC,IAAD,CAAYjF,UAAU,QAAQ8E,QAASA,GACrC,yBACE9E,UAAU,SACVkF,MAAO,CACLC,gBAAgB,QAAD,OAAUF,EAAOb,MAAjB,QAGjB,yBAAKpE,UAAU,eACb,4BAAKiF,EAAOZ,OACZ,2BAAIY,EAAOX,oBAMrB,yBAAKtE,UAAU,2CACb,kBAACoF,EAAA,EAAD,CAASf,MAAM,OAAON,aAAW,QAC/B,kBAACsB,EAAA,EAAD,CACErF,UAAU,YACVsF,MAAM,YACNvB,aAAW,gBAEX,kBAAC,IAAD,QAGJ,kBAACqB,EAAA,EAAD,CAASf,MAAM,OAAON,aAAW,QAC/B,kBAACsB,EAAA,EAAD,CACErF,UAAU,YACVsF,MAAM,YACNvB,aAAW,gBAEX,kBAAC,IAAD,QAGJ,kBAACqB,EAAA,EAAD,CAASf,MAAM,QAAQN,aAAW,QAChC,kBAACsB,EAAA,EAAD,CACErF,UAAU,YACVsF,MAAM,YACNvB,aAAW,gBAEX,kBAAC,IAAD,c,QCrCDwB,MA9Bf,WACE,OACE,kBAAC,IAAD,KACE,yBAAKvF,UAAU,cACb,yBAAKA,UAAU,yCACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOwF,KAAK,YACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,KACV,kBAAC,EAAD,SAKN,yBAAKxF,UAAU,gFACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOwF,KAAK,0BACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,KACV,kBAAC,EAAD,YCjBMC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,MCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.74c39cc5.chunk.js","sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\nimport Badge from \"react-bootstrap/Badge\";\r\nimport Image from \"react-bootstrap/Image\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nimport \"./Home.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Home = () => {\r\n  const [selectedIngredients, setSelectedIngredients] = useState([]);\r\n  const ingreRef = useRef();\r\n\r\n  const search = () => {\r\n    const newSelectedIng = ingreRef.current.value;\r\n    setSelectedIngredients([...selectedIngredients, newSelectedIng]);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"sidebar-header\">\r\n        <Link\r\n          className=\"d-flex w-100 h-100 align-items-center justify-content-start\"\r\n          to=\"/profile\"\r\n        >\r\n          <Image\r\n            className=\"avatar\"\r\n            src=\"https://www.iconfinder.com/data/icons/faces-general/100/male_old_flat-512.png\"\r\n            roundedCircle\r\n          />\r\n\r\n          <div className=\"username\">Username</div>\r\n        </Link>\r\n      </div>\r\n      <div className=\"sidebar-content d-flex align-items-center\">\r\n        <div className=\"filter w-100 py-5\">\r\n          <h3 className=\"text-center\">Filter</h3>\r\n          <Form.Group as={Col}>\r\n            <Form.Label>Ingredients</Form.Label>\r\n            <InputGroup>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Search Here ...\"\r\n                ref={ingreRef}\r\n              />\r\n              <InputGroup.Prepend onClick={search}>\r\n                <InputGroup.Text>\r\n                  <SearchIcon />\r\n                </InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n            </InputGroup>\r\n          </Form.Group>\r\n          <div className=\"w-100 mx-3\">\r\n            {selectedIngredients.map((ingredient, i) => (\r\n              <Badge className=\"mr-2\" key={i} pill variant=\"primary\">\r\n                {ingredient}\r\n              </Badge>\r\n            ))}\r\n          </div>\r\n          <Form.Group className=\"mt-4\" as={Col}>\r\n            <Typography id=\"cooking-time-slider\" gutterBottom>\r\n              Cooking Time (Min)\r\n            </Typography>\r\n            <Slider\r\n              className=\"mt-2\"\r\n              min={0}\r\n              defaultValue={20}\r\n              step={5}\r\n              max={180}\r\n              valueLabelDisplay=\"auto\"\r\n              aria-labelledby=\"cooking-time-slider\"\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"formBasicCheckbox\" as={Col}>\r\n            <Form.Label>Course</Form.Label>\r\n            <Form.Check type=\"checkbox\" label=\"Breakfast\" />\r\n            <Form.Check type=\"checkbox\" label=\"Lunch\" />\r\n            <Form.Check type=\"checkbox\" label=\"Dinner\" />\r\n          </Form.Group>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TabPanel;\r\n","import React, { useState } from \"react\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport TabPanel from \"../../components/TabPanel/TabPanel\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport \"./Profile.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Home = () => {\r\n  const [tab, setTab] = useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setTab(newValue);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"sidebar-header d-flex w-100 align-items-center justify-content-start\">\r\n        <IconButton>\r\n          <Link to=\"/\">\r\n            <ArrowBackIosIcon />\r\n          </Link>\r\n        </IconButton>\r\n        <div>Back to Home</div>\r\n      </div>\r\n      <div className=\"profile py-5\">\r\n        <div className=\"w-100 d-flex justify-content-center\">\r\n          <Avatar className=\"avatar\">N</Avatar>\r\n        </div>\r\n        <Typography variant=\"h3\" align=\"center\">\r\n          Ngan Pham\r\n        </Typography>\r\n        <Typography variant=\"subtitle1\" align=\"center\">\r\n          Neque porro quisquam est qui dolorem ipsum quia dolor sit amet,\r\n          consectetur, adipisci velit\r\n        </Typography>\r\n        <Paper className=\"w-100 mt-4 flex-grow-1\" square>\r\n          <Tabs\r\n            value={tab}\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            onChange={handleChange}\r\n            aria-label=\"disabled tabs example\"\r\n            centered\r\n          >\r\n            <Tab label=\"My Recipe\" />\r\n            <Tab label=\"Saved Recipe\" />\r\n          </Tabs>\r\n        </Paper>\r\n        <TabPanel value={tab} index={0}>\r\n          <div className=\"w-100 d-flex justify-content-center flex-row flex-wrap\">\r\n            <Link to=\"/profile/RecipeDetails\">\r\n              <Avatar className=\"recipe-avatar\" variant=\"rounded\"></Avatar>\r\n            </Link>\r\n            <Link to=\"/profile/RecipeDetails\">\r\n              <Avatar className=\"recipe-avatar\" variant=\"rounded\"></Avatar>\r\n            </Link>\r\n            <Link to=\"/profile/RecipeDetails\">\r\n              <Avatar className=\"recipe-avatar\" variant=\"rounded\"></Avatar>\r\n            </Link>\r\n            <Link to=\"/profile/RecipeDetails\">\r\n              <Avatar className=\"recipe-avatar\" variant=\"rounded\"></Avatar>\r\n            </Link>\r\n          </div>\r\n        </TabPanel>\r\n        <TabPanel value={tab} index={1}>\r\n          <div className=\"w-100 d-flex justify-content-center flex-row flex-wrap\">\r\n            <Link to=\"/profile/RecipeDetails\">\r\n              <Avatar className=\"recipe-avatar\" variant=\"rounded\"></Avatar>\r\n            </Link>\r\n            <Link to=\"/profile/RecipeDetails\">\r\n              <Avatar className=\"recipe-avatar\" variant=\"rounded\"></Avatar>\r\n            </Link>\r\n            <Link to=\"/profile/RecipeDetails\">\r\n              <Avatar className=\"recipe-avatar\" variant=\"rounded\"></Avatar>\r\n            </Link>\r\n            <Link to=\"/profile/RecipeDetails\">\r\n              <Avatar className=\"recipe-avatar\" variant=\"rounded\"></Avatar>\r\n            </Link>\r\n          </div>\r\n        </TabPanel>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport Image from \"react-bootstrap/Image\";\r\n\r\nconst RecipeDetails = () => {\r\n  return (\r\n    <div className=\"d-flex w-100 h-100 justify-content-center align-items-center\">\r\n      <div>\r\n        <div className=\"d-flex justify-content-center\">\r\n          <Image src=\"//unsplash.it/500/300\" />\r\n        </div>\r\n        <h2 align=\"center\">This is my awesome recipe</h2>\r\n        <div className=\"d-flex w-100 h-100 justify-content-center\">\r\n          <div className=\"w-50\">\r\n            <p>\r\n              Proin ex purus, luctus in sollicitudin sed, consectetur sit amet\r\n              magna. Cras aliquam fringilla nisi, eu sodales nunc viverra et.\r\n              Mauris eu lobortis tellus. Aliquam mattis tincidunt aliquam. Fusce\r\n              varius pulvinar libero ornare dictum. Etiam eget mi a dui blandit\r\n              malesuada. Maecenas consequat justo nec lacus malesuada suscipit.\r\n              Nunc venenatis risus eu vehicula volutpat. Curabitur dictum ante\r\n              sit amet pulvinar iaculis. Donec venenatis augue nec elit sodales,\r\n              nec efficitur justo condimentum. Proin ex purus, luctus in\r\n              sollicitudin sed, consectetur sit amet magna. Cras aliquam\r\n              fringilla nisi, eu sodales nunc viverra et. Mauris eu lobortis\r\n              tellus. Aliquam mattis tincidunt aliquam. Fusce varius pulvinar\r\n              libero ornare dictum. Etiam eget mi a dui blandit malesuada.\r\n              Maecenas consequat justo nec lacus malesuada suscipit. Nunc\r\n              venenatis risus eu vehicula volutpat. Curabitur dictum ante sit\r\n              amet pulvinar iaculis. Donec venenatis augue nec elit sodales, nec\r\n              efficitur justo condimentum.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RecipeDetails;\r\n","const recipes = [\r\n  {\r\n    id: 0,\r\n    image: [\r\n      \"https://thestayathomechef.com/wp-content/uploads/2016/06/Fried-Chicken-4-1.jpg\",\r\n    ],\r\n    title: \"Air Fryer Chicken Thighs\",\r\n    description:\r\n      \"These juicy chicken thighs are done in under 30 minutes and the air fryer makes it so easy!\",\r\n    steps: [\r\n      {\r\n        title: \"Step 1\",\r\n        description: \"Preheat an air fryer to 400 degrees F (200 degrees C).\",\r\n      },\r\n\r\n      {\r\n        title: \"Step 2\",\r\n        description:\r\n          \"Pat chicken thighs dry with a paper towel and brush the skin-side of each piece with olive oil. Place chicken thighs, skin-side down, in a single layer on a plate.\",\r\n      },\r\n\r\n      {\r\n        title: \"Step 3\",\r\n        description:\r\n          \"Combine smoked paprika, garlic powder, salt, and pepper in a bowl and sprinkle half the seasoning mixture evenly over the 4 chicken thighs. Turn thighs over and evenly sprinkle remaining seasoning mixture on top. Place chicken thighs in the air fryer basket in a single layer, skin-side up.\",\r\n      },\r\n\r\n      {\r\n        title: \"Step 4\",\r\n        description:\r\n          \"Fry in the preheated air fryer until chicken is brown and juices run clear, about 18 minutes. An instant-read thermometer inserted into the center should read at least 165 degrees F (74 degrees C).\",\r\n      },\r\n    ],\r\n    ingredients: [\r\n      {\r\n        name: \"4 chicken thighs\",\r\n        tag: \"chicken\",\r\n      },\r\n\r\n      {\r\n        name: \"2 teaspoons olive oil\",\r\n        tag: \"olive oil\",\r\n      },\r\n\r\n      {\r\n        name: \"1 teaspoon smoked paprika\",\r\n        tag: \"paprika\",\r\n      },\r\n\r\n      {\r\n        name: \"¾ teaspoon garlic powder\",\r\n        tag: \"garlic\",\r\n      },\r\n\r\n      {\r\n        name: \"½ teaspoon salt\",\r\n        tag: \"salt\",\r\n      },\r\n\r\n      {\r\n        name: \"½ teaspoon ground black pepper\",\r\n        tag: \"pepper\",\r\n      },\r\n    ],\r\n    duration: 30,\r\n  },\r\n\r\n  {\r\n    id: 1,\r\n    image: [\r\n      \"https://recipetineats.com/wp-content/uploads/2018/07/Spaghetti-Bolognese.jpg\",\r\n    ],\r\n    title: \"Spaghetti Bolognese\",\r\n    description:\r\n      \"Spaghetti Bolognese is very easy to make at home, so it has become a popular family dinner option around the world.\",\r\n    steps: [\r\n      {\r\n        title: \"Step 1\",\r\n        description:\r\n          \"Cut the onion into cubes and fry in olive and vegetable oil in a preheated saucepan, about 5 minutes, until golden brown.\",\r\n      },\r\n\r\n      {\r\n        title: \"Step 2\",\r\n        description:\r\n          \"Cut the carrots into small cubes, add to the onion. Fry for 1 minute and then add water. Cover the saucepan and simmer for about 10 minutes.\",\r\n      },\r\n\r\n      {\r\n        title: \"Step 3\",\r\n        description:\r\n          \"Cut into slices the celery, add to the saucepan with onion and carrots.\",\r\n      },\r\n\r\n      {\r\n        title: \"Step 4\",\r\n        description: \"Cut the mushrooms into thin slices, add to the saucepan.\",\r\n      },\r\n\r\n      {\r\n        title: \"Step 5\",\r\n        description:\r\n          \"Add dried basil, paprika, salt, pepper to the minced meat. Mix everything thoroughly and add to the saucepan. Simmer for about 5 minutes\",\r\n      },\r\n\r\n      {\r\n        title: \"Step 6\",\r\n        description: \"Add tomato sauce, mix everything thoroughly.\",\r\n      },\r\n\r\n      {\r\n        title: \"Step 7\",\r\n        description:\r\n          \"Boil the paste, following the instructions.Serve immediately, garnish with basil leaves and sprinkle with parmesan cheese on top.\",\r\n      },\r\n    ],\r\n    ingredients: [\r\n      {\r\n        name: \"4 carrots\",\r\n        tag: \"carrot\",\r\n      },\r\n\r\n      {\r\n        name: \"4 celery\",\r\n        tag: \"celery\",\r\n      },\r\n\r\n      {\r\n        name: \"500g ground beef\",\r\n        tag: \"beef\",\r\n      },\r\n\r\n      {\r\n        name: \"400ml tomato sauce\",\r\n        tag: \"tomato\",\r\n      },\r\n\r\n      {\r\n        name: \"1 tablespoon basil\",\r\n        tag: \"basil\",\r\n      },\r\n\r\n      {\r\n        name: \"1 tablespoon Parmesan cheese\",\r\n        tag: \"cheese\",\r\n      },\r\n\r\n      {\r\n        name: \"500g spaghetti\",\r\n        tag: \"spaghetti\",\r\n      },\r\n    ],\r\n    duration: 45,\r\n  },\r\n\r\n  {\r\n    id: 2,\r\n    image: [\r\n      \"https://thebusybaker.ca/wp-content/uploads/2018/03/easy-mushroom-risotto-fbigBEST.jpg\",\r\n    ],\r\n    title: \"Risotto\",\r\n    description:\r\n      \"The best risotto should resemble a soup in its consistency. You can use homemade broth instead of the water!\",\r\n    steps: [\r\n      {\r\n        title: \"Step 1\",\r\n        description:\r\n          \"Peel and dice onion. Finely chop garlic. Next, cut green asparagus into fine slices.\",\r\n      },\r\n\r\n      {\r\n        title: \"Step 2\",\r\n        description:\r\n          \"Sauté onion and garlic in some vegetable oil. Now, add risotto rice and continue to sauté until the rice is slightly translucent.\",\r\n      },\r\n\r\n      {\r\n        title: \"Step 3\",\r\n        description:\r\n          \"Gradually add small amounts of the chicken stock, about 4 - 5 times, and allow the rice to continue simmering. Keep adding the stock until the bottom of the pan ceases to be covered with liqui\",\r\n      },\r\n\r\n      {\r\n        title: \"Step 4\",\r\n        description:\r\n          \"Meanwhile, fry the chanterelles and green asparagus in another pan with some vegetable oil. Season with salt and pepper.\",\r\n      },\r\n\r\n      {\r\n        title: \"Step 5\",\r\n        description:\r\n          \"Add dried basil, pRemove the risotto from the stove, fold in the Parmesan and butter and season with sugar, salt and pepper. Leave to stand with closed lid for 2 min. Add three-quarters of the fried chanterelles and asparagus and fold into the risotto carefully. Place the remaining chanterelle and asparagus pieces on top of the risotto to serve.aprika, salt, pepper to the minced meat. Mix everything thoroughly and add to the saucepan. Simmer for about 5 minutes\",\r\n      },\r\n    ],\r\n    ingredients: [\r\n      {\r\n        name: \"200g risotto rice\",\r\n        tag: \"rice\",\r\n      },\r\n\r\n      {\r\n        name: \"200g green asparagus\",\r\n        tag: \"asparagus\",\r\n      },\r\n\r\n      {\r\n        name: \"1 onion\",\r\n        tag: \"onion\",\r\n      },\r\n\r\n      {\r\n        name: \"50 ml white wine\",\r\n        tag: \"wine\",\r\n      },\r\n\r\n      {\r\n        name: \"30g Parmesan cheese\",\r\n        tag: \"cheese\",\r\n      },\r\n\r\n      {\r\n        name: \"40g butter\",\r\n        tag: \"butter\",\r\n      },\r\n\r\n      {\r\n        name: \"1 tablespoon salt and pepper\",\r\n        tag: \"salt pepper\",\r\n      },\r\n    ],\r\n    duration: 60,\r\n  },\r\n\r\n  {\r\n    id: 3,\r\n    image: [\r\n      \"https://www.simplyrecipes.com/wp-content/uploads/2011/11/Italian-Meatballs-LEAD-1.jpg\",\r\n    ],\r\n    title: \"Classic Meatballs\",\r\n    description:\r\n      \"Delicious, easy and warming; this stew uses simple ingredients and is guaranteed to please all who eats it\",\r\n    steps: [\r\n      {\r\n        title: \"Step 1\",\r\n        description:\r\n          \"PSauté both in a small frying pan in some vegetable oil until the onion is translucent.eel and dice onion. Finely chop garlic. Next, cut green asparagus into fine slices.\",\r\n      },\r\n\r\n      {\r\n        title: \"Step 2\",\r\n        description:\r\n          \"Next, mix ground beef, breadcrumbs, egg, sautéed onion and garlic, basil, salt, and pepper in a bowl.\",\r\n      },\r\n\r\n      {\r\n        title: \"Step 3\",\r\n        description:\r\n          \"Use hands to make small balls from the mixture, approx. 3 cm in diameter.\",\r\n      },\r\n\r\n      {\r\n        title: \"Step 4\",\r\n        description:\r\n          \"For the sauce, dice the onion, carrot, half a garlic clove, mushrooms, and tomatoes.\",\r\n      },\r\n\r\n      {\r\n        title: \"Step 5\",\r\n        description:\r\n          \"Sauté the cut vegetables in some vegetable oil. Add pureed tomatoes and season with sugar, salt, and pepper. Allow to reduce on a low heat for approx. 15 – 20 min.\",\r\n      },\r\n\r\n      {\r\n        title: \"Step 6\",\r\n        description:\r\n          \"Next, add chopped herbs and meatballs to the tomato sauce and simmer for approx. 10 – 15 minutes with closed lid until the meatballs are cooked. Serve with rice or toasted bread.\",\r\n      },\r\n    ],\r\n    ingredients: [\r\n      {\r\n        name: \"300g ground beef\",\r\n        tag: \"beef\",\r\n      },\r\n\r\n      {\r\n        name: \"3 tablespoon breadcrumbs\",\r\n        tag: \"breadcrumbs\",\r\n      },\r\n\r\n      {\r\n        name: \"1 egg\",\r\n        tag: \"egg\",\r\n      },\r\n\r\n      {\r\n        name: \"1 tablespoon tomato paste\",\r\n        tag: \"tomato paste\",\r\n      },\r\n\r\n      {\r\n        name: \"4 tomatoes\",\r\n        tag: \"tomato\",\r\n      },\r\n\r\n      {\r\n        name: \"10g basil\",\r\n        tag: \"basil\",\r\n      },\r\n\r\n      {\r\n        name: \"1 carrot\",\r\n        tag: \"carrot\",\r\n      },\r\n\r\n      {\r\n        name: \"4 mushrooms\",\r\n        tag: \"mushroom\",\r\n      },\r\n    ],\r\n    duration: 60,\r\n  },\r\n\r\n  {\r\n    id: 4,\r\n    image: [\r\n      \"https://natashaskitchen.com/wp-content/uploads/2019/01/Caesar-Salad-Recipe-3.jpg\",\r\n    ],\r\n    title: \"Caesar Salad\",\r\n    description:\r\n      \"Much better than a typical salad and goes down a treat with the whole family!\",\r\n    steps: [\r\n      {\r\n        title: \"Step 1\",\r\n        description:\r\n          \"Preheat the oven to 180°C/350°F. For the bread chips, cut the baguette into thin slices and distribute on a lined baking tray.\",\r\n      },\r\n\r\n      {\r\n        title: \"Step 2\",\r\n        description:\r\n          \"Drizzle the slices with olive oil and bake in preheated oven at 180°C/350°F for approx. 5 - 7 min. until golden.\",\r\n      },\r\n\r\n      {\r\n        title: \"Step 3\",\r\n        description:\r\n          \"For the dressing, cook an egg in boiling water for approx. 2 - 3 min. Gently crack open the egg to remove the egg yolk. Put the parboiled egg yolk into a tall container.\",\r\n      },\r\n\r\n      {\r\n        title: \"Step 4\",\r\n        description:\r\n          \"Add chopped anchovy fillets and garlic, lemon juice, Worcestershire sauce, mustard, white balsamic vinegar, and sugar to the egg yolk and mix with a hand blender.the sauce, dice the onion, carrot, half a garlic clove, mushrooms, and tomatoes.\",\r\n      },\r\n\r\n      {\r\n        title: \"Step 5\",\r\n        description:\r\n          \"Slowly stir the rest of the olive oil into the egg mixture. By doing this, mayonnaise will start to form. Season with salt and pepper.\",\r\n      },\r\n    ],\r\n    ingredients: [\r\n      {\r\n        name: \"1 baguette\",\r\n        tag: \"bread\",\r\n      },\r\n\r\n      {\r\n        name: \"2 romaine lettuce\",\r\n        tag: \"lettuce\",\r\n      },\r\n\r\n      {\r\n        name: \"50g olives\",\r\n        tag: \"olive\",\r\n      },\r\n\r\n      {\r\n        name: \"3 eggs\",\r\n        tag: \"egg\",\r\n      },\r\n\r\n      {\r\n        name: \"50g cucumber\",\r\n        tag: \"cheese\",\r\n      },\r\n\r\n      {\r\n        name: \"1 tablespoon lemon juice\",\r\n        tag: \"lemon juice\",\r\n      },\r\n\r\n      {\r\n        name: \"1 tablespoon balsamic vinegar\",\r\n        tag: \"balsamic vinegar\",\r\n      },\r\n    ],\r\n    duration: 20,\r\n  },\r\n];\r\n\r\nexport default recipes;\r\n","import React from \"react\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport ShareIcon from \"@material-ui/icons/Share\";\r\nimport TinderCard from \"react-tinder-card\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport ThumbUpAltIcon from \"@material-ui/icons/ThumbUpAlt\";\r\n\r\nimport recipesDB from \"../../data/recipes\";\r\n\r\nimport \"./Swiper.css\";\r\n\r\nconst Swiper = () => {\r\n  const recipes = recipesDB;\r\n\r\n  const onSwipe = (direction) => {\r\n    switch (direction) {\r\n      case \"left\":\r\n        alert(\"You disliked this recipe\");\r\n        break;\r\n      case \"right\":\r\n        alert(\"You liked this recipe\");\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"what-to-eat\">What To Eat?</div>\r\n      <div className=\"w-100 d-flex justify-content-center\">\r\n        <div className=\"d-flex flex-column\">\r\n          <div className=\"cardContainer\">\r\n            {recipes.map((recipe) => (\r\n              <TinderCard className=\"swipe\" onSwipe={onSwipe}>\r\n                <div\r\n                  className=\"swiper\"\r\n                  style={{\r\n                    backgroundImage: `url('${recipe.image}')`,\r\n                  }}\r\n                >\r\n                  <div className=\"recipe-info\">\r\n                    <h1>{recipe.title}</h1>\r\n                    <p>{recipe.description}</p>\r\n                  </div>\r\n                </div>\r\n              </TinderCard>\r\n            ))}\r\n          </div>\r\n          <div className=\"d-flex justify-content-around px-5 mt-3\">\r\n            <Tooltip title=\"Like\" aria-label=\"like\">\r\n              <Fab\r\n                className=\"my-circle\"\r\n                color=\"secondary\"\r\n                aria-label=\"add an alarm\"\r\n              >\r\n                <ThumbUpAltIcon />\r\n              </Fab>\r\n            </Tooltip>\r\n            <Tooltip title=\"Save\" aria-label=\"like\">\r\n              <Fab\r\n                className=\"my-circle\"\r\n                color=\"secondary\"\r\n                aria-label=\"add an alarm\"\r\n              >\r\n                <FavoriteIcon />\r\n              </Fab>\r\n            </Tooltip>\r\n            <Tooltip title=\"Share\" aria-label=\"like\">\r\n              <Fab\r\n                className=\"my-circle\"\r\n                color=\"secondary\"\r\n                aria-label=\"add an alarm\"\r\n              >\r\n                <ShareIcon />\r\n              </Fab>\r\n            </Tooltip>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Swiper;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport Home from \"./pages/Home/Home\";\r\nimport Profile from \"./pages/Profile/Profile\";\r\nimport RecipeDetails from \"./pages/RecipeDetails/RecipeDetails\";\r\nimport Swiper from \"./pages/Swiper/Swiper\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div className=\"app d-flex\">\r\n        <div className=\"sidebar d-flex flex-column float-left\">\r\n          <Switch>\r\n            <Route path=\"/profile\">\r\n              <Profile />\r\n            </Route>\r\n            <Route path=\"/\">\r\n              <Home />\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n\r\n        <div className=\"main float-left d-flex flex-column justify-content-center align-items-center\">\r\n          <Switch>\r\n            <Route path=\"/profile/RecipeDetails\">\r\n              <RecipeDetails />\r\n            </Route>\r\n            <Route path=\"/\">\r\n              <Swiper />\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport HelloWorld from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HelloWorld />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}